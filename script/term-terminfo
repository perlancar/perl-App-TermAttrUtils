#!perl

use 5.010001;
use strict;
use warnings;

use Data::Dump;
use Perinci::CmdLine::Any;
use Term::Terminfo;

# AUTHORITY
# DATE
# DIST
# VERSION

our %SPEC;

$SPEC{app} = {
    v => 1.1,
    summary => 'List terminal capabilities using Term::Terminfo',
    args => {
        by => {
            schema => ['str*', in=>['capname', 'varname']],
            default => 'varname',
            pos => 0,
            cmdline_aliases => {
                'by_capname' => {is_flag=>1, summary => 'Shortcut for --by=capname', code=>sub { $_[0]{by} = 'capname' }},
                'by_varname' => {is_flag=>1, summary => 'Shortcut for --by=varname', code=>sub { $_[0]{by} = 'varname' }},
            },
        },
    },
};
sub app {
    my %args = @_;
    my $by = $args{by} // 'varname';

    my $ti = Term::Terminfo->new;
    my $res = [];
    if ($by eq 'varname') {
        for my $var ($ti->flag_varnames) { push @$res, {var=>$var, type=>'flag', value=>$ti->flag_by_varname($var)} }
        for my $var ($ti->num_varnames ) { push @$res, {var=>$var, type=>'num' , value=>$ti->num_by_varname ($var)} }
        for my $var ($ti->str_varnames ) { push @$res, {var=>$var, type=>'str' , value=>$ti->str_by_varname ($var)} }
        return [200, "OK", $res, {'cmdline.default_format'=>'perl', 'table.fields'=>[qw/var type value/]}];
    } else {
        for my $cap ($ti->flag_capnames) { push @$res, {cap=>$cap, type=>'flag', value=>$ti->getflag($cap)} }
        for my $cap ($ti->num_capnames ) { push @$res, {cap=>$cap, type=>'num' , value=>$ti->getnum ($cap)} }
        for my $cap ($ti->str_capnames ) { push @$res, {cap=>$cap, type=>'str' , value=>$ti->getstr ($cap)} }
        return [200, "OK", $res, {'cmdline.default_format'=>'perl', 'table.fields'=>[qw/cap type value/]}];
    }
}

Perinci::CmdLine::Any->new(
    url => '/main/app',
)->run;

# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

 % term-terminfo

Sample result:

 [
  200,
  "OK",
  [
    { type => "flag", value => 1, var => "auto_right_margin" },
    { type => "flag", value => 1, var => "back_color_erase" },
    { type => "flag", value => 1, var => "backspaces_with_bs" },
    { type => "flag", value => 1, var => "can_change" },
    { type => "flag", value => 1, var => "eat_newline_glitch" },
    { type => "flag", value => 1, var => "has_meta_key" },
    { type => "flag", value => 1, var => "move_insert_mode" },
    { type => "flag", value => 1, var => "move_standout_mode" },
    { type => "flag", value => 1, var => "no_pad_char" },
    { type => "flag", value => 1, var => "prtr_silent" },
    { type => "num", value => 80, var => "columns" },
    { type => "num", value => 8, var => "init_tabs" },
    { type => "num", value => 24, var => "lines" },
    { type => "num", value => 256, var => "max_colors" },
    { type => "num", value => 32767, var => "max_pairs" },
    {
      type  => "str",
      value => "``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~",
      var   => "acs_chars",
    },
    { type => "str", value => "\e[Z", var => "back_tab" },
    { type => "str", value => "\a", var => "bell" },
    { type => "str", value => "\r", var => "carriage_return" },
    {
      type  => "str",
      value => "\e[%i%p1%d;%p2%dr",
      var   => "change_scroll_region",
    },
    { type => "str", value => "\e[3g", var => "clear_all_tabs" },
    { type => "str", value => "\e[H\e[2J", var => "clear_screen" },
    { type => "str", value => "\e[1K", var => "clr_bol" },
    { type => "str", value => "\e[K", var => "clr_eol" },
    { type => "str", value => "\e[J", var => "clr_eos" },
    { type => "str", value => "\e[%i%p1%dG", var => "column_address" },
    { type => "str", value => "\e[%i%p1%d;%p2%dH", var => "cursor_address" },
    { type => "str", value => "\n", var => "cursor_down" },
    { type => "str", value => "\e[H", var => "cursor_home" },
    { type => "str", value => "\e[?25l", var => "cursor_invisible" },
    { type => "str", value => "\b", var => "cursor_left" },
    { type => "str", value => "\e[?12l\e[?25h", var => "cursor_normal" },
    { type => "str", value => "\e[C", var => "cursor_right" },
    { type => "str", value => "\e[A", var => "cursor_up" },
    { type => "str", value => "\e[?12;25h", var => "cursor_visible" },
    { type => "str", value => "\e[P", var => "delete_character" },
    { type => "str", value => "\e[M", var => "delete_line" },
    { type => "str", value => "\e(0", var => "enter_alt_charset_mode" },
    { type => "str", value => "\e[?7h", var => "enter_am_mode" },
    { type => "str", value => "\e[5m", var => "enter_blink_mode" },
    { type => "str", value => "\e[1m", var => "enter_bold_mode" },
    { type => "str", value => "\e[?1049h", var => "enter_ca_mode" },
    { type => "str", value => "\e[2m", var => "enter_dim_mode" },
    { type => "str", value => "\e[4h", var => "enter_insert_mode" },
    { type => "str", value => "\e[3m", var => "enter_italics_mode" },
    { type => "str", value => "\e[7m", var => "enter_reverse_mode" },
    { type => "str", value => "\e[8m", var => "enter_secure_mode" },
    { type => "str", value => "\e[7m", var => "enter_standout_mode" },
    { type => "str", value => "\e[4m", var => "enter_underline_mode" },
    { type => "str", value => "\e[%p1%dX", var => "erase_chars" },
    { type => "str", value => "\e(B", var => "exit_alt_charset_mode" },
    { type => "str", value => "\e[?7l", var => "exit_am_mode" },
    { type => "str", value => "\e(B\e[m", var => "exit_attribute_mode" },
    { type => "str", value => "\e[?1049l", var => "exit_ca_mode" },
    { type => "str", value => "\e[4l", var => "exit_insert_mode" },
    { type => "str", value => "\e[23m", var => "exit_italics_mode" },
    { type => "str", value => "\e[27m", var => "exit_standout_mode" },
    { type => "str", value => "\e[24m", var => "exit_underline_mode" },
    { type => "str", value => "\e[?5h\$<100/>\e[?5l", var => "flash_screen" },
    { type => "str", value => "\e[!p\e[?3;4l\e[4l\e>", var => "init_2string" },
    {
      type  => "str",
      value => "\e]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X\e\\",
      var   => "initialize_color",
    },
    { type => "str", value => "\e[L", var => "insert_line" },
    { type => "str", value => "\eOE", var => "key_b2" },
    { type => "str", value => "\x7F", var => "key_backspace" },
    { type => "str", value => "\e[Z", var => "key_btab" },
    { type => "str", value => "\e[3~", var => "key_dc" },
    { type => "str", value => "\eOB", var => "key_down" },
    { type => "str", value => "\eOF", var => "key_end" },
    { type => "str", value => "\eOM", var => "key_enter" },
    { type => "str", value => "\eOP", var => "key_f1" },
    { type => "str", value => "\e[21~", var => "key_f10" },
    { type => "str", value => "\e[23~", var => "key_f11" },
    { type => "str", value => "\e[24~", var => "key_f12" },
    { type => "str", value => "\e[1;2P", var => "key_f13" },
    { type => "str", value => "\e[1;2Q", var => "key_f14" },
    { type => "str", value => "\e[1;2R", var => "key_f15" },
    { type => "str", value => "\e[1;2S", var => "key_f16" },
    { type => "str", value => "\e[15;2~", var => "key_f17" },
    { type => "str", value => "\e[17;2~", var => "key_f18" },
    { type => "str", value => "\e[18;2~", var => "key_f19" },
    { type => "str", value => "\eOQ", var => "key_f2" },
    { type => "str", value => "\e[19;2~", var => "key_f20" },
    { type => "str", value => "\e[20;2~", var => "key_f21" },
    { type => "str", value => "\e[21;2~", var => "key_f22" },
    { type => "str", value => "\e[23;2~", var => "key_f23" },
    { type => "str", value => "\e[24;2~", var => "key_f24" },
    { type => "str", value => "\e[1;5P", var => "key_f25" },
    { type => "str", value => "\e[1;5Q", var => "key_f26" },
    { type => "str", value => "\e[1;5R", var => "key_f27" },
    { type => "str", value => "\e[1;5S", var => "key_f28" },
    { type => "str", value => "\e[15;5~", var => "key_f29" },
    { type => "str", value => "\eOR", var => "key_f3" },
    { type => "str", value => "\e[17;5~", var => "key_f30" },
    { type => "str", value => "\e[18;5~", var => "key_f31" },
    { type => "str", value => "\e[19;5~", var => "key_f32" },
    { type => "str", value => "\e[20;5~", var => "key_f33" },
    { type => "str", value => "\e[21;5~", var => "key_f34" },
    { type => "str", value => "\e[23;5~", var => "key_f35" },
    { type => "str", value => "\e[24;5~", var => "key_f36" },
    { type => "str", value => "\e[1;6P", var => "key_f37" },
    { type => "str", value => "\e[1;6Q", var => "key_f38" },
    { type => "str", value => "\e[1;6R", var => "key_f39" },
    { type => "str", value => "\eOS", var => "key_f4" },
    { type => "str", value => "\e[1;6S", var => "key_f40" },
    { type => "str", value => "\e[15;6~", var => "key_f41" },
    { type => "str", value => "\e[17;6~", var => "key_f42" },
    { type => "str", value => "\e[18;6~", var => "key_f43" },
    { type => "str", value => "\e[19;6~", var => "key_f44" },
    { type => "str", value => "\e[20;6~", var => "key_f45" },
    { type => "str", value => "\e[21;6~", var => "key_f46" },
    { type => "str", value => "\e[23;6~", var => "key_f47" },
    { type => "str", value => "\e[24;6~", var => "key_f48" },
    { type => "str", value => "\e[1;3P", var => "key_f49" },
    { type => "str", value => "\e[15~", var => "key_f5" },
    { type => "str", value => "\e[1;3Q", var => "key_f50" },
    { type => "str", value => "\e[1;3R", var => "key_f51" },
    { type => "str", value => "\e[1;3S", var => "key_f52" },
    { type => "str", value => "\e[15;3~", var => "key_f53" },
    { type => "str", value => "\e[17;3~", var => "key_f54" },
    { type => "str", value => "\e[18;3~", var => "key_f55" },
    { type => "str", value => "\e[19;3~", var => "key_f56" },
    { type => "str", value => "\e[20;3~", var => "key_f57" },
    { type => "str", value => "\e[21;3~", var => "key_f58" },
    { type => "str", value => "\e[23;3~", var => "key_f59" },
    { type => "str", value => "\e[17~", var => "key_f6" },
    { type => "str", value => "\e[24;3~", var => "key_f60" },
    { type => "str", value => "\e[1;4P", var => "key_f61" },
    { type => "str", value => "\e[1;4Q", var => "key_f62" },
    { type => "str", value => "\e[1;4R", var => "key_f63" },
    { type => "str", value => "\e[18~", var => "key_f7" },
    { type => "str", value => "\e[19~", var => "key_f8" },
    { type => "str", value => "\e[20~", var => "key_f9" },
    { type => "str", value => "\eOH", var => "key_home" },
    { type => "str", value => "\e[2~", var => "key_ic" },
    { type => "str", value => "\eOD", var => "key_left" },
    { type => "str", value => "\e[M", var => "key_mouse" },
    { type => "str", value => "\e[6~", var => "key_npage" },
    { type => "str", value => "\e[5~", var => "key_ppage" },
    { type => "str", value => "\eOC", var => "key_right" },
    { type => "str", value => "\e[3;2~", var => "key_sdc" },
    { type => "str", value => "\e[1;2F", var => "key_send" },
    { type => "str", value => "\e[1;2B", var => "key_sf" },
    { type => "str", value => "\e[1;2H", var => "key_shome" },
    { type => "str", value => "\e[2;2~", var => "key_sic" },
    { type => "str", value => "\e[1;2D", var => "key_sleft" },
    { type => "str", value => "\e[6;2~", var => "key_snext" },
    { type => "str", value => "\e[5;2~", var => "key_sprevious" },
    { type => "str", value => "\e[1;2A", var => "key_sr" },
    { type => "str", value => "\e[1;2C", var => "key_sright" },
    { type => "str", value => "\eOA", var => "key_up" },
    { type => "str", value => "\e[?1l\e>", var => "keypad_local" },
    { type => "str", value => "\e[?1h\e=", var => "keypad_xmit" },
    { type => "str", value => "\el", var => "memory_lock" },
    { type => "str", value => "\em", var => "memory_unlock" },
    { type => "str", value => "\e[39;49m", var => "orig_pair" },
    { type => "str", value => "\e[%p1%dP", var => "parm_dch" },
    { type => "str", value => "\e[%p1%dM", var => "parm_delete_line" },
    { type => "str", value => "\e[%p1%dB", var => "parm_down_cursor" },
    { type => "str", value => "\e[%p1%d\@", var => "parm_ich" },
    { type => "str", value => "\e[%p1%dS", var => "parm_index" },
    { type => "str", value => "\e[%p1%dL", var => "parm_insert_line" },
    { type => "str", value => "\e[%p1%dD", var => "parm_left_cursor" },
    { type => "str", value => "\e[%p1%dC", var => "parm_right_cursor" },
    { type => "str", value => "\e[%p1%dT", var => "parm_rindex" },
    { type => "str", value => "\e[%p1%dA", var => "parm_up_cursor" },
    { type => "str", value => "\e[i", var => "print_screen" },
    { type => "str", value => "\e[4i", var => "prtr_off" },
    { type => "str", value => "\e[5i", var => "prtr_on" },
    { type => "str", value => "\ec", var => "reset_1string" },
    { type => "str", value => "\e[!p\e[?3;4l\e[4l\e>", var => "reset_2string" },
    { type => "str", value => "\e8", var => "restore_cursor" },
    { type => "str", value => "\e[%i%p1%dd", var => "row_address" },
    { type => "str", value => "\e7", var => "save_cursor" },
    { type => "str", value => "\n", var => "scroll_forward" },
    { type => "str", value => "\eM", var => "scroll_reverse" },
    {
      type  => "str",
      value => "\e[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m",
      var   => "set_a_background",
    },
    {
      type  => "str",
      value => "\e[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m",
      var   => "set_a_foreground",
    },
    {
      type  => "str",
      value => "%?%p9%t\e(0%e\e(B%;\e[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m",
      var   => "set_attributes",
    },
    { type => "str", value => "\eH", var => "set_tab" },
    { type => "str", value => "\t", var => "tab" },
    { type => "str", value => "\e[%i%d;%dR", var => "user6" },
    { type => "str", value => "\e[6n", var => "user7" },
    { type => "str", value => "\e[?1;2c", var => "user8" },
    { type => "str", value => "\e[c", var => "user9" },
  ],
  {
    "cmdline.default_format" => "perl",
    "stream" => 0,
    "table.fields" => ["var", "type", "value"],
  },
 ]


=head1 DESCRIPTION

This is a simple CLI for L<Term::Terminfo>.


=head1 SEE ALSO

L<Term::Terminfo>

B<terminfo> Unix utility
